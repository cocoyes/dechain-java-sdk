package com.dechain.utils;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class GoodsSol extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_AMOUNT = "amount";

    public static final String FUNC_CHANGENUMANDPRICE = "changeNumAndPrice";

    public static final String FUNC_CREATEORDER = "createOrder";

    public static final String FUNC_DOORDERSTATUS = "doOrderStatus";

    public static final String FUNC_GETBASEINFO = "getBaseInfo";

    public static final String FUNC_GETORDERINFO = "getOrderInfo";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_ORDERMAP = "orderMap";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PRICE = "price";

    public static final String FUNC_REMAINAMOUNT = "remainAmount";

    @Deprecated
    protected GoodsSol(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GoodsSol(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GoodsSol(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GoodsSol(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> amount() {
        final Function function = new Function(
                FUNC_AMOUNT,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> changeNumAndPrice(BigInteger _nums, BigInteger _price) {
        final Function function = new Function(
                FUNC_CHANGENUMANDPRICE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_nums),
                new org.web3j.abi.datatypes.generated.Uint256(_price)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> createOrder(String _otherGoods, String _myOrderId, String _otherOrderId, BigInteger _myNum, BigInteger _otherNum, Boolean _myPay, BigInteger _payAmount) {
        final Function function = new Function(
                FUNC_CREATEORDER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_otherGoods),
                new org.web3j.abi.datatypes.Utf8String(_myOrderId),
                new org.web3j.abi.datatypes.Utf8String(_otherOrderId),
                new org.web3j.abi.datatypes.generated.Uint256(_myNum),
                new org.web3j.abi.datatypes.generated.Uint256(_otherNum),
                new org.web3j.abi.datatypes.Bool(_myPay),
                new org.web3j.abi.datatypes.generated.Uint256(_payAmount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> doOrderStatus(String _myOrderId, BigInteger _orderStatus) {
        final Function function = new Function(
                FUNC_DOORDERSTATUS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_myOrderId),
                new org.web3j.abi.datatypes.generated.Uint256(_orderStatus)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getBaseInfo() {
        final Function function = new Function(
                FUNC_GETBASEINFO,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getOrderInfo(String _myOrderId) {
        final Function function = new Function(
                FUNC_GETORDERINFO,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_myOrderId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getOwner() {
        final Function function = new Function(
                FUNC_GETOWNER,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> orderMap(String param0) {
        final Function function = new Function(
                FUNC_ORDERMAP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> owner() {
        final Function function = new Function(
                FUNC_OWNER,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> price() {
        final Function function = new Function(
                FUNC_PRICE,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> remainAmount() {
        final Function function = new Function(
                FUNC_REMAINAMOUNT,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static GoodsSol load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GoodsSol(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GoodsSol load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GoodsSol(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GoodsSol load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GoodsSol(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GoodsSol load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GoodsSol(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GoodsSol> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _master, String _token, BigInteger _amount, BigInteger _price) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_master),
                new org.web3j.abi.datatypes.Address(_token),
                new org.web3j.abi.datatypes.generated.Uint256(_amount),
                new org.web3j.abi.datatypes.generated.Uint256(_price)));
        return deployRemoteCall(GoodsSol.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<GoodsSol> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _master, String _token, BigInteger _amount, BigInteger _price) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_master),
                new org.web3j.abi.datatypes.Address(_token),
                new org.web3j.abi.datatypes.generated.Uint256(_amount),
                new org.web3j.abi.datatypes.generated.Uint256(_price)));
        return deployRemoteCall(GoodsSol.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GoodsSol> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _master, String _token, BigInteger _amount, BigInteger _price) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_master),
                new org.web3j.abi.datatypes.Address(_token),
                new org.web3j.abi.datatypes.generated.Uint256(_amount),
                new org.web3j.abi.datatypes.generated.Uint256(_price)));
        return deployRemoteCall(GoodsSol.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GoodsSol> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _master, String _token, BigInteger _amount, BigInteger _price) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_master),
                new org.web3j.abi.datatypes.Address(_token),
                new org.web3j.abi.datatypes.generated.Uint256(_amount),
                new org.web3j.abi.datatypes.generated.Uint256(_price)));
        return deployRemoteCall(GoodsSol.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
